name: Release Drafter

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  update-changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Esto es importante para obtener todo el historial de tags

      - name: Fetch all branches and tags
        run: |
          git fetch --all
          git fetch --tags

      - name: Determine branch
        id: get_branch
        run: echo "::set-output name=branch::$(git symbolic-ref --short HEAD || echo 'main')"

      - name: Generate and Prepend Changelog
        run: |
          # Obtener el tag actual y el anterior
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${CURRENT_TAG}^)
          
          # Crear encabezado con la fecha del tag actual
          echo "# ${CURRENT_TAG} ($(git log -1 --format=%ai ${CURRENT_TAG}))" > temp_changelog.txt
          echo "" >> temp_changelog.txt
          
          # Obtener el mensaje del release tag (si existe)
          TAG_MESSAGE=$(git tag -l --format='%(contents)' ${CURRENT_TAG})
          if [ ! -z "$TAG_MESSAGE" ]; then
            echo "## Release Notes" >> temp_changelog.txt
            echo "$TAG_MESSAGE" >> temp_changelog.txt
            echo "" >> temp_changelog.txt
          fi
          
          # Obtener los commits entre tags
          echo "## Commits" >> temp_changelog.txt
          git log --pretty=format:"* %h - %s (%an)" ${PREVIOUS_TAG}..${CURRENT_TAG} >> temp_changelog.txt
          echo "" >> temp_changelog.txt
          echo "" >> temp_changelog.txt
          
          # Si existe CHANGELOG.md, agregar su contenido
          if [ -f CHANGELOG.md ]; then
            cat CHANGELOG.md >> temp_changelog.txt
          fi
          
          # Mover el archivo temporal a CHANGELOG.md
          mv temp_changelog.txt CHANGELOG.md

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout ${{ steps.get_branch.outputs.branch }}
          git pull origin ${{ steps.get_branch.outputs.branch }}
          git add CHANGELOG.md
          git commit -m 'Update changelog'
          git push origin ${{ steps.get_branch.outputs.branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}